name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  test-lambda:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python 3.11.7
        uses: actions/setup-python@v2
        with:
          python-version: '3.11.7'
      
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      
      - name: Install dependencies
        run: |
          pip install pytest==8.4.1
          pip install boto3==1.38.42
        working-directory: ./backend

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

      - name: Test Lambda with pytest
        shell: pwsh
        run: |
          pytest 'function_test.py'
        working-directory: ./backend

      - name: Package Lambda function
        if: ${{ job.status == 'success' }}
        run: |
          zip -r9 function.zip function.py
        working-directory: ./backend

  terraform-apply:
    needs: test-lambda
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.12.1
      
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./backend

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ./backend
  
  